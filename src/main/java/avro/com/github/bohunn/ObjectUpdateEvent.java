/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package avro.com.github.bohunn;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ObjectUpdateEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord, Hashable {
  private static final long serialVersionUID = -6648109467003805800L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ObjectUpdateEvent\",\"namespace\":\"avro.com.github.bohunn\",\"fields\":[{\"name\":\"eventObjType\",\"type\":{\"type\":\"enum\",\"name\":\"EventObjType\",\"symbols\":[\"FULL\",\"PERSON_ONLY\",\"BP_ONLY\"],\"default\":\"FULL\"},\"doc\":\"event object type\"},{\"name\":\"bpObjId\",\"type\":[\"null\",\"long\"],\"doc\":\"obj_bp id\"},{\"name\":\"mainAddrId\",\"type\":[\"null\",\"long\"],\"doc\":\"main address id\"},{\"name\":\"mainAddress\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"main address full text\"},{\"name\":\"bpName\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"business partner name\"},{\"name\":\"bpNr\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}],\"doc\":\"business partner key id 11\"},{\"name\":\"bpCloseDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"personName\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"person obj id\"},{\"name\":\"personNr\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"person key\"},{\"name\":\"personCloseDate\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"narilo\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"legalHold\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"isMa\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"domiAddrId\",\"type\":\"long\",\"doc\":\"domicile address\"},{\"name\":\"domiAddress\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"domicile address full text\"},{\"name\":\"banklagernd\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"isVip\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"isBoeko\",\"type\":[\"null\",{\"type\":\"string\",\"avro.java.string\":\"String\"}]},{\"name\":\"hash\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<ObjectUpdateEvent> ENCODER =
      new BinaryMessageEncoder<>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ObjectUpdateEvent> DECODER =
      new BinaryMessageDecoder<>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ObjectUpdateEvent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ObjectUpdateEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ObjectUpdateEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ObjectUpdateEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ObjectUpdateEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ObjectUpdateEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ObjectUpdateEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** event object type */
  private avro.com.github.bohunn.EventObjType eventObjType;
  /** obj_bp id */
  private java.lang.Long bpObjId;
  /** main address id */
  private java.lang.Long mainAddrId;
  /** main address full text */
  private java.lang.String mainAddress;
  /** business partner name */
  private java.lang.String bpName;
  /** business partner key id 11 */
  private java.lang.String bpNr;
  private java.lang.String bpCloseDate;
  /** person obj id */
  private java.lang.String personName;
  /** person key */
  private java.lang.String personNr;
  private java.lang.String personCloseDate;
  private java.lang.String narilo;
  private java.lang.String legalHold;
  private java.lang.String isMa;
  /** domicile address */
  private long domiAddrId;
  /** domicile address full text */
  private java.lang.String domiAddress;
  private java.lang.String banklagernd;
  private java.lang.String isVip;
  private java.lang.String isBoeko;
  private java.lang.String hash;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ObjectUpdateEvent() {}

  /**
   * All-args constructor.
   * @param eventObjType event object type
   * @param bpObjId obj_bp id
   * @param mainAddrId main address id
   * @param mainAddress main address full text
   * @param bpName business partner name
   * @param bpNr business partner key id 11
   * @param bpCloseDate The new value for bpCloseDate
   * @param personName person obj id
   * @param personNr person key
   * @param personCloseDate The new value for personCloseDate
   * @param narilo The new value for narilo
   * @param legalHold The new value for legalHold
   * @param isMa The new value for isMa
   * @param domiAddrId domicile address
   * @param domiAddress domicile address full text
   * @param banklagernd The new value for banklagernd
   * @param isVip The new value for isVip
   * @param isBoeko The new value for isBoeko
   * @param hash The new value for hash
   */
  public ObjectUpdateEvent(avro.com.github.bohunn.EventObjType eventObjType, java.lang.Long bpObjId, java.lang.Long mainAddrId, java.lang.String mainAddress, java.lang.String bpName, java.lang.String bpNr, java.lang.String bpCloseDate, java.lang.String personName, java.lang.String personNr, java.lang.String personCloseDate, java.lang.String narilo, java.lang.String legalHold, java.lang.String isMa, java.lang.Long domiAddrId, java.lang.String domiAddress, java.lang.String banklagernd, java.lang.String isVip, java.lang.String isBoeko, java.lang.String hash) {
    this.eventObjType = eventObjType;
    this.bpObjId = bpObjId;
    this.mainAddrId = mainAddrId;
    this.mainAddress = mainAddress;
    this.bpName = bpName;
    this.bpNr = bpNr;
    this.bpCloseDate = bpCloseDate;
    this.personName = personName;
    this.personNr = personNr;
    this.personCloseDate = personCloseDate;
    this.narilo = narilo;
    this.legalHold = legalHold;
    this.isMa = isMa;
    this.domiAddrId = domiAddrId;
    this.domiAddress = domiAddress;
    this.banklagernd = banklagernd;
    this.isVip = isVip;
    this.isBoeko = isBoeko;
    this.hash = hash;
  }

  @Override
  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }

  @Override
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }

  // Used by DatumWriter.  Applications should not call.
  @Override
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return eventObjType;
    case 1: return bpObjId;
    case 2: return mainAddrId;
    case 3: return mainAddress;
    case 4: return bpName;
    case 5: return bpNr;
    case 6: return bpCloseDate;
    case 7: return personName;
    case 8: return personNr;
    case 9: return personCloseDate;
    case 10: return narilo;
    case 11: return legalHold;
    case 12: return isMa;
    case 13: return domiAddrId;
    case 14: return domiAddress;
    case 15: return banklagernd;
    case 16: return isVip;
    case 17: return isBoeko;
    case 18: return hash;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @Override
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: eventObjType = (avro.com.github.bohunn.EventObjType)value$; break;
    case 1: bpObjId = (java.lang.Long)value$; break;
    case 2: mainAddrId = (java.lang.Long)value$; break;
    case 3: mainAddress = value$ != null ? value$.toString() : null; break;
    case 4: bpName = value$ != null ? value$.toString() : null; break;
    case 5: bpNr = value$ != null ? value$.toString() : null; break;
    case 6: bpCloseDate = value$ != null ? value$.toString() : null; break;
    case 7: personName = value$ != null ? value$.toString() : null; break;
    case 8: personNr = value$ != null ? value$.toString() : null; break;
    case 9: personCloseDate = value$ != null ? value$.toString() : null; break;
    case 10: narilo = value$ != null ? value$.toString() : null; break;
    case 11: legalHold = value$ != null ? value$.toString() : null; break;
    case 12: isMa = value$ != null ? value$.toString() : null; break;
    case 13: domiAddrId = (java.lang.Long)value$; break;
    case 14: domiAddress = value$ != null ? value$.toString() : null; break;
    case 15: banklagernd = value$ != null ? value$.toString() : null; break;
    case 16: isVip = value$ != null ? value$.toString() : null; break;
    case 17: isBoeko = value$ != null ? value$.toString() : null; break;
    case 18: hash = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'eventObjType' field.
   * @return event object type
   */
  public avro.com.github.bohunn.EventObjType getEventObjType() {
    return eventObjType;
  }


  /**
   * Sets the value of the 'eventObjType' field.
   * event object type
   * @param value the value to set.
   */
  public void setEventObjType(avro.com.github.bohunn.EventObjType value) {
    this.eventObjType = value;
  }

  /**
   * Gets the value of the 'bpObjId' field.
   * @return obj_bp id
   */
  public java.lang.Long getBpObjId() {
    return bpObjId;
  }


  /**
   * Sets the value of the 'bpObjId' field.
   * obj_bp id
   * @param value the value to set.
   */
  public void setBpObjId(java.lang.Long value) {
    this.bpObjId = value;
  }

  /**
   * Gets the value of the 'mainAddrId' field.
   * @return main address id
   */
  public java.lang.Long getMainAddrId() {
    return mainAddrId;
  }


  /**
   * Sets the value of the 'mainAddrId' field.
   * main address id
   * @param value the value to set.
   */
  public void setMainAddrId(java.lang.Long value) {
    this.mainAddrId = value;
  }

  /**
   * Gets the value of the 'mainAddress' field.
   * @return main address full text
   */
  public java.lang.String getMainAddress() {
    return mainAddress;
  }


  /**
   * Sets the value of the 'mainAddress' field.
   * main address full text
   * @param value the value to set.
   */
  public void setMainAddress(java.lang.String value) {
    this.mainAddress = value;
  }

  /**
   * Gets the value of the 'bpName' field.
   * @return business partner name
   */
  public java.lang.String getBpName() {
    return bpName;
  }


  /**
   * Sets the value of the 'bpName' field.
   * business partner name
   * @param value the value to set.
   */
  public void setBpName(java.lang.String value) {
    this.bpName = value;
  }

  /**
   * Gets the value of the 'bpNr' field.
   * @return business partner key id 11
   */
  public java.lang.String getBpNr() {
    return bpNr;
  }


  /**
   * Sets the value of the 'bpNr' field.
   * business partner key id 11
   * @param value the value to set.
   */
  public void setBpNr(java.lang.String value) {
    this.bpNr = value;
  }

  /**
   * Gets the value of the 'bpCloseDate' field.
   * @return The value of the 'bpCloseDate' field.
   */
  public java.lang.String getBpCloseDate() {
    return bpCloseDate;
  }


  /**
   * Sets the value of the 'bpCloseDate' field.
   * @param value the value to set.
   */
  public void setBpCloseDate(java.lang.String value) {
    this.bpCloseDate = value;
  }

  /**
   * Gets the value of the 'personName' field.
   * @return person obj id
   */
  public java.lang.String getPersonName() {
    return personName;
  }


  /**
   * Sets the value of the 'personName' field.
   * person obj id
   * @param value the value to set.
   */
  public void setPersonName(java.lang.String value) {
    this.personName = value;
  }

  /**
   * Gets the value of the 'personNr' field.
   * @return person key
   */
  public java.lang.String getPersonNr() {
    return personNr;
  }


  /**
   * Sets the value of the 'personNr' field.
   * person key
   * @param value the value to set.
   */
  public void setPersonNr(java.lang.String value) {
    this.personNr = value;
  }

  /**
   * Gets the value of the 'personCloseDate' field.
   * @return The value of the 'personCloseDate' field.
   */
  public java.lang.String getPersonCloseDate() {
    return personCloseDate;
  }


  /**
   * Sets the value of the 'personCloseDate' field.
   * @param value the value to set.
   */
  public void setPersonCloseDate(java.lang.String value) {
    this.personCloseDate = value;
  }

  /**
   * Gets the value of the 'narilo' field.
   * @return The value of the 'narilo' field.
   */
  public java.lang.String getNarilo() {
    return narilo;
  }


  /**
   * Sets the value of the 'narilo' field.
   * @param value the value to set.
   */
  public void setNarilo(java.lang.String value) {
    this.narilo = value;
  }

  /**
   * Gets the value of the 'legalHold' field.
   * @return The value of the 'legalHold' field.
   */
  public java.lang.String getLegalHold() {
    return legalHold;
  }


  /**
   * Sets the value of the 'legalHold' field.
   * @param value the value to set.
   */
  public void setLegalHold(java.lang.String value) {
    this.legalHold = value;
  }

  /**
   * Gets the value of the 'isMa' field.
   * @return The value of the 'isMa' field.
   */
  public java.lang.String getIsMa() {
    return isMa;
  }


  /**
   * Sets the value of the 'isMa' field.
   * @param value the value to set.
   */
  public void setIsMa(java.lang.String value) {
    this.isMa = value;
  }

  /**
   * Gets the value of the 'domiAddrId' field.
   * @return domicile address
   */
  public long getDomiAddrId() {
    return domiAddrId;
  }


  /**
   * Sets the value of the 'domiAddrId' field.
   * domicile address
   * @param value the value to set.
   */
  public void setDomiAddrId(long value) {
    this.domiAddrId = value;
  }

  /**
   * Gets the value of the 'domiAddress' field.
   * @return domicile address full text
   */
  public java.lang.String getDomiAddress() {
    return domiAddress;
  }


  /**
   * Sets the value of the 'domiAddress' field.
   * domicile address full text
   * @param value the value to set.
   */
  public void setDomiAddress(java.lang.String value) {
    this.domiAddress = value;
  }

  /**
   * Gets the value of the 'banklagernd' field.
   * @return The value of the 'banklagernd' field.
   */
  public java.lang.String getBanklagernd() {
    return banklagernd;
  }


  /**
   * Sets the value of the 'banklagernd' field.
   * @param value the value to set.
   */
  public void setBanklagernd(java.lang.String value) {
    this.banklagernd = value;
  }

  /**
   * Gets the value of the 'isVip' field.
   * @return The value of the 'isVip' field.
   */
  public java.lang.String getIsVip() {
    return isVip;
  }


  /**
   * Sets the value of the 'isVip' field.
   * @param value the value to set.
   */
  public void setIsVip(java.lang.String value) {
    this.isVip = value;
  }

  /**
   * Gets the value of the 'isBoeko' field.
   * @return The value of the 'isBoeko' field.
   */
  public java.lang.String getIsBoeko() {
    return isBoeko;
  }


  /**
   * Sets the value of the 'isBoeko' field.
   * @param value the value to set.
   */
  public void setIsBoeko(java.lang.String value) {
    this.isBoeko = value;
  }

  /**
   * Gets the value of the 'hash' field.
   * @return The value of the 'hash' field.
   */
  public java.lang.String getHash() {
    return hash;
  }


  /**
   * Sets the value of the 'hash' field.
   * @param value the value to set.
   */
  public void setHash(java.lang.String value) {
    this.hash = value;
  }

  /**
   * Creates a new ObjectUpdateEvent RecordBuilder.
   * @return A new ObjectUpdateEvent RecordBuilder
   */
  public static avro.com.github.bohunn.ObjectUpdateEvent.Builder newBuilder() {
    return new avro.com.github.bohunn.ObjectUpdateEvent.Builder();
  }

  /**
   * Creates a new ObjectUpdateEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ObjectUpdateEvent RecordBuilder
   */
  public static avro.com.github.bohunn.ObjectUpdateEvent.Builder newBuilder(avro.com.github.bohunn.ObjectUpdateEvent.Builder other) {
    if (other == null) {
      return new avro.com.github.bohunn.ObjectUpdateEvent.Builder();
    } else {
      return new avro.com.github.bohunn.ObjectUpdateEvent.Builder(other);
    }
  }

  /**
   * Creates a new ObjectUpdateEvent RecordBuilder by copying an existing ObjectUpdateEvent instance.
   * @param other The existing instance to copy.
   * @return A new ObjectUpdateEvent RecordBuilder
   */
  public static avro.com.github.bohunn.ObjectUpdateEvent.Builder newBuilder(avro.com.github.bohunn.ObjectUpdateEvent other) {
    if (other == null) {
      return new avro.com.github.bohunn.ObjectUpdateEvent.Builder();
    } else {
      return new avro.com.github.bohunn.ObjectUpdateEvent.Builder(other);
    }
  }

  /**
   * RecordBuilder for ObjectUpdateEvent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ObjectUpdateEvent>
    implements org.apache.avro.data.RecordBuilder<ObjectUpdateEvent> {

    /** event object type */
    private avro.com.github.bohunn.EventObjType eventObjType;
    /** obj_bp id */
    private java.lang.Long bpObjId;
    /** main address id */
    private java.lang.Long mainAddrId;
    /** main address full text */
    private java.lang.String mainAddress;
    /** business partner name */
    private java.lang.String bpName;
    /** business partner key id 11 */
    private java.lang.String bpNr;
    private java.lang.String bpCloseDate;
    /** person obj id */
    private java.lang.String personName;
    /** person key */
    private java.lang.String personNr;
    private java.lang.String personCloseDate;
    private java.lang.String narilo;
    private java.lang.String legalHold;
    private java.lang.String isMa;
    /** domicile address */
    private long domiAddrId;
    /** domicile address full text */
    private java.lang.String domiAddress;
    private java.lang.String banklagernd;
    private java.lang.String isVip;
    private java.lang.String isBoeko;
    private java.lang.String hash;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(avro.com.github.bohunn.ObjectUpdateEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.eventObjType)) {
        this.eventObjType = data().deepCopy(fields()[0].schema(), other.eventObjType);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.bpObjId)) {
        this.bpObjId = data().deepCopy(fields()[1].schema(), other.bpObjId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.mainAddrId)) {
        this.mainAddrId = data().deepCopy(fields()[2].schema(), other.mainAddrId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.mainAddress)) {
        this.mainAddress = data().deepCopy(fields()[3].schema(), other.mainAddress);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.bpName)) {
        this.bpName = data().deepCopy(fields()[4].schema(), other.bpName);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.bpNr)) {
        this.bpNr = data().deepCopy(fields()[5].schema(), other.bpNr);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.bpCloseDate)) {
        this.bpCloseDate = data().deepCopy(fields()[6].schema(), other.bpCloseDate);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.personName)) {
        this.personName = data().deepCopy(fields()[7].schema(), other.personName);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.personNr)) {
        this.personNr = data().deepCopy(fields()[8].schema(), other.personNr);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.personCloseDate)) {
        this.personCloseDate = data().deepCopy(fields()[9].schema(), other.personCloseDate);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.narilo)) {
        this.narilo = data().deepCopy(fields()[10].schema(), other.narilo);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.legalHold)) {
        this.legalHold = data().deepCopy(fields()[11].schema(), other.legalHold);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.isMa)) {
        this.isMa = data().deepCopy(fields()[12].schema(), other.isMa);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.domiAddrId)) {
        this.domiAddrId = data().deepCopy(fields()[13].schema(), other.domiAddrId);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.domiAddress)) {
        this.domiAddress = data().deepCopy(fields()[14].schema(), other.domiAddress);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.banklagernd)) {
        this.banklagernd = data().deepCopy(fields()[15].schema(), other.banklagernd);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.isVip)) {
        this.isVip = data().deepCopy(fields()[16].schema(), other.isVip);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.isBoeko)) {
        this.isBoeko = data().deepCopy(fields()[17].schema(), other.isBoeko);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.hash)) {
        this.hash = data().deepCopy(fields()[18].schema(), other.hash);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
    }

    /**
     * Creates a Builder by copying an existing ObjectUpdateEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(avro.com.github.bohunn.ObjectUpdateEvent other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.eventObjType)) {
        this.eventObjType = data().deepCopy(fields()[0].schema(), other.eventObjType);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.bpObjId)) {
        this.bpObjId = data().deepCopy(fields()[1].schema(), other.bpObjId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.mainAddrId)) {
        this.mainAddrId = data().deepCopy(fields()[2].schema(), other.mainAddrId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.mainAddress)) {
        this.mainAddress = data().deepCopy(fields()[3].schema(), other.mainAddress);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.bpName)) {
        this.bpName = data().deepCopy(fields()[4].schema(), other.bpName);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.bpNr)) {
        this.bpNr = data().deepCopy(fields()[5].schema(), other.bpNr);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.bpCloseDate)) {
        this.bpCloseDate = data().deepCopy(fields()[6].schema(), other.bpCloseDate);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.personName)) {
        this.personName = data().deepCopy(fields()[7].schema(), other.personName);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.personNr)) {
        this.personNr = data().deepCopy(fields()[8].schema(), other.personNr);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.personCloseDate)) {
        this.personCloseDate = data().deepCopy(fields()[9].schema(), other.personCloseDate);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.narilo)) {
        this.narilo = data().deepCopy(fields()[10].schema(), other.narilo);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.legalHold)) {
        this.legalHold = data().deepCopy(fields()[11].schema(), other.legalHold);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.isMa)) {
        this.isMa = data().deepCopy(fields()[12].schema(), other.isMa);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.domiAddrId)) {
        this.domiAddrId = data().deepCopy(fields()[13].schema(), other.domiAddrId);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.domiAddress)) {
        this.domiAddress = data().deepCopy(fields()[14].schema(), other.domiAddress);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.banklagernd)) {
        this.banklagernd = data().deepCopy(fields()[15].schema(), other.banklagernd);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.isVip)) {
        this.isVip = data().deepCopy(fields()[16].schema(), other.isVip);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.isBoeko)) {
        this.isBoeko = data().deepCopy(fields()[17].schema(), other.isBoeko);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.hash)) {
        this.hash = data().deepCopy(fields()[18].schema(), other.hash);
        fieldSetFlags()[18] = true;
      }
    }

    /**
      * Gets the value of the 'eventObjType' field.
      * event object type
      * @return The value.
      */
    public avro.com.github.bohunn.EventObjType getEventObjType() {
      return eventObjType;
    }


    /**
      * Sets the value of the 'eventObjType' field.
      * event object type
      * @param value The value of 'eventObjType'.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder setEventObjType(avro.com.github.bohunn.EventObjType value) {
      validate(fields()[0], value);
      this.eventObjType = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'eventObjType' field has been set.
      * event object type
      * @return True if the 'eventObjType' field has been set, false otherwise.
      */
    public boolean hasEventObjType() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'eventObjType' field.
      * event object type
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder clearEventObjType() {
      eventObjType = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'bpObjId' field.
      * obj_bp id
      * @return The value.
      */
    public java.lang.Long getBpObjId() {
      return bpObjId;
    }


    /**
      * Sets the value of the 'bpObjId' field.
      * obj_bp id
      * @param value The value of 'bpObjId'.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder setBpObjId(java.lang.Long value) {
      validate(fields()[1], value);
      this.bpObjId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'bpObjId' field has been set.
      * obj_bp id
      * @return True if the 'bpObjId' field has been set, false otherwise.
      */
    public boolean hasBpObjId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'bpObjId' field.
      * obj_bp id
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder clearBpObjId() {
      bpObjId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'mainAddrId' field.
      * main address id
      * @return The value.
      */
    public java.lang.Long getMainAddrId() {
      return mainAddrId;
    }


    /**
      * Sets the value of the 'mainAddrId' field.
      * main address id
      * @param value The value of 'mainAddrId'.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder setMainAddrId(java.lang.Long value) {
      validate(fields()[2], value);
      this.mainAddrId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'mainAddrId' field has been set.
      * main address id
      * @return True if the 'mainAddrId' field has been set, false otherwise.
      */
    public boolean hasMainAddrId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'mainAddrId' field.
      * main address id
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder clearMainAddrId() {
      mainAddrId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'mainAddress' field.
      * main address full text
      * @return The value.
      */
    public java.lang.String getMainAddress() {
      return mainAddress;
    }


    /**
      * Sets the value of the 'mainAddress' field.
      * main address full text
      * @param value The value of 'mainAddress'.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder setMainAddress(java.lang.String value) {
      validate(fields()[3], value);
      this.mainAddress = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'mainAddress' field has been set.
      * main address full text
      * @return True if the 'mainAddress' field has been set, false otherwise.
      */
    public boolean hasMainAddress() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'mainAddress' field.
      * main address full text
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder clearMainAddress() {
      mainAddress = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'bpName' field.
      * business partner name
      * @return The value.
      */
    public java.lang.String getBpName() {
      return bpName;
    }


    /**
      * Sets the value of the 'bpName' field.
      * business partner name
      * @param value The value of 'bpName'.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder setBpName(java.lang.String value) {
      validate(fields()[4], value);
      this.bpName = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'bpName' field has been set.
      * business partner name
      * @return True if the 'bpName' field has been set, false otherwise.
      */
    public boolean hasBpName() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'bpName' field.
      * business partner name
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder clearBpName() {
      bpName = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'bpNr' field.
      * business partner key id 11
      * @return The value.
      */
    public java.lang.String getBpNr() {
      return bpNr;
    }


    /**
      * Sets the value of the 'bpNr' field.
      * business partner key id 11
      * @param value The value of 'bpNr'.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder setBpNr(java.lang.String value) {
      validate(fields()[5], value);
      this.bpNr = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'bpNr' field has been set.
      * business partner key id 11
      * @return True if the 'bpNr' field has been set, false otherwise.
      */
    public boolean hasBpNr() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'bpNr' field.
      * business partner key id 11
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder clearBpNr() {
      bpNr = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'bpCloseDate' field.
      * @return The value.
      */
    public java.lang.String getBpCloseDate() {
      return bpCloseDate;
    }


    /**
      * Sets the value of the 'bpCloseDate' field.
      * @param value The value of 'bpCloseDate'.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder setBpCloseDate(java.lang.String value) {
      validate(fields()[6], value);
      this.bpCloseDate = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'bpCloseDate' field has been set.
      * @return True if the 'bpCloseDate' field has been set, false otherwise.
      */
    public boolean hasBpCloseDate() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'bpCloseDate' field.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder clearBpCloseDate() {
      bpCloseDate = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'personName' field.
      * person obj id
      * @return The value.
      */
    public java.lang.String getPersonName() {
      return personName;
    }


    /**
      * Sets the value of the 'personName' field.
      * person obj id
      * @param value The value of 'personName'.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder setPersonName(java.lang.String value) {
      validate(fields()[7], value);
      this.personName = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'personName' field has been set.
      * person obj id
      * @return True if the 'personName' field has been set, false otherwise.
      */
    public boolean hasPersonName() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'personName' field.
      * person obj id
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder clearPersonName() {
      personName = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'personNr' field.
      * person key
      * @return The value.
      */
    public java.lang.String getPersonNr() {
      return personNr;
    }


    /**
      * Sets the value of the 'personNr' field.
      * person key
      * @param value The value of 'personNr'.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder setPersonNr(java.lang.String value) {
      validate(fields()[8], value);
      this.personNr = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'personNr' field has been set.
      * person key
      * @return True if the 'personNr' field has been set, false otherwise.
      */
    public boolean hasPersonNr() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'personNr' field.
      * person key
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder clearPersonNr() {
      personNr = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'personCloseDate' field.
      * @return The value.
      */
    public java.lang.String getPersonCloseDate() {
      return personCloseDate;
    }


    /**
      * Sets the value of the 'personCloseDate' field.
      * @param value The value of 'personCloseDate'.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder setPersonCloseDate(java.lang.String value) {
      validate(fields()[9], value);
      this.personCloseDate = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'personCloseDate' field has been set.
      * @return True if the 'personCloseDate' field has been set, false otherwise.
      */
    public boolean hasPersonCloseDate() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'personCloseDate' field.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder clearPersonCloseDate() {
      personCloseDate = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'narilo' field.
      * @return The value.
      */
    public java.lang.String getNarilo() {
      return narilo;
    }


    /**
      * Sets the value of the 'narilo' field.
      * @param value The value of 'narilo'.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder setNarilo(java.lang.String value) {
      validate(fields()[10], value);
      this.narilo = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'narilo' field has been set.
      * @return True if the 'narilo' field has been set, false otherwise.
      */
    public boolean hasNarilo() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'narilo' field.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder clearNarilo() {
      narilo = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'legalHold' field.
      * @return The value.
      */
    public java.lang.String getLegalHold() {
      return legalHold;
    }


    /**
      * Sets the value of the 'legalHold' field.
      * @param value The value of 'legalHold'.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder setLegalHold(java.lang.String value) {
      validate(fields()[11], value);
      this.legalHold = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'legalHold' field has been set.
      * @return True if the 'legalHold' field has been set, false otherwise.
      */
    public boolean hasLegalHold() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'legalHold' field.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder clearLegalHold() {
      legalHold = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'isMa' field.
      * @return The value.
      */
    public java.lang.String getIsMa() {
      return isMa;
    }


    /**
      * Sets the value of the 'isMa' field.
      * @param value The value of 'isMa'.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder setIsMa(java.lang.String value) {
      validate(fields()[12], value);
      this.isMa = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'isMa' field has been set.
      * @return True if the 'isMa' field has been set, false otherwise.
      */
    public boolean hasIsMa() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'isMa' field.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder clearIsMa() {
      isMa = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'domiAddrId' field.
      * domicile address
      * @return The value.
      */
    public long getDomiAddrId() {
      return domiAddrId;
    }


    /**
      * Sets the value of the 'domiAddrId' field.
      * domicile address
      * @param value The value of 'domiAddrId'.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder setDomiAddrId(long value) {
      validate(fields()[13], value);
      this.domiAddrId = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'domiAddrId' field has been set.
      * domicile address
      * @return True if the 'domiAddrId' field has been set, false otherwise.
      */
    public boolean hasDomiAddrId() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'domiAddrId' field.
      * domicile address
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder clearDomiAddrId() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'domiAddress' field.
      * domicile address full text
      * @return The value.
      */
    public java.lang.String getDomiAddress() {
      return domiAddress;
    }


    /**
      * Sets the value of the 'domiAddress' field.
      * domicile address full text
      * @param value The value of 'domiAddress'.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder setDomiAddress(java.lang.String value) {
      validate(fields()[14], value);
      this.domiAddress = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'domiAddress' field has been set.
      * domicile address full text
      * @return True if the 'domiAddress' field has been set, false otherwise.
      */
    public boolean hasDomiAddress() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'domiAddress' field.
      * domicile address full text
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder clearDomiAddress() {
      domiAddress = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'banklagernd' field.
      * @return The value.
      */
    public java.lang.String getBanklagernd() {
      return banklagernd;
    }


    /**
      * Sets the value of the 'banklagernd' field.
      * @param value The value of 'banklagernd'.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder setBanklagernd(java.lang.String value) {
      validate(fields()[15], value);
      this.banklagernd = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'banklagernd' field has been set.
      * @return True if the 'banklagernd' field has been set, false otherwise.
      */
    public boolean hasBanklagernd() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'banklagernd' field.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder clearBanklagernd() {
      banklagernd = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'isVip' field.
      * @return The value.
      */
    public java.lang.String getIsVip() {
      return isVip;
    }


    /**
      * Sets the value of the 'isVip' field.
      * @param value The value of 'isVip'.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder setIsVip(java.lang.String value) {
      validate(fields()[16], value);
      this.isVip = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'isVip' field has been set.
      * @return True if the 'isVip' field has been set, false otherwise.
      */
    public boolean hasIsVip() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'isVip' field.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder clearIsVip() {
      isVip = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'isBoeko' field.
      * @return The value.
      */
    public java.lang.String getIsBoeko() {
      return isBoeko;
    }


    /**
      * Sets the value of the 'isBoeko' field.
      * @param value The value of 'isBoeko'.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder setIsBoeko(java.lang.String value) {
      validate(fields()[17], value);
      this.isBoeko = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'isBoeko' field has been set.
      * @return True if the 'isBoeko' field has been set, false otherwise.
      */
    public boolean hasIsBoeko() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'isBoeko' field.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder clearIsBoeko() {
      isBoeko = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'hash' field.
      * @return The value.
      */
    public java.lang.String getHash() {
      return hash;
    }


    /**
      * Sets the value of the 'hash' field.
      * @param value The value of 'hash'.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder setHash(java.lang.String value) {
      validate(fields()[18], value);
      this.hash = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'hash' field has been set.
      * @return True if the 'hash' field has been set, false otherwise.
      */
    public boolean hasHash() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'hash' field.
      * @return This builder.
      */
    public avro.com.github.bohunn.ObjectUpdateEvent.Builder clearHash() {
      hash = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ObjectUpdateEvent build() {
      try {
        ObjectUpdateEvent record = new ObjectUpdateEvent();
        record.eventObjType = fieldSetFlags()[0] ? this.eventObjType : (avro.com.github.bohunn.EventObjType) defaultValue(fields()[0]);
        record.bpObjId = fieldSetFlags()[1] ? this.bpObjId : (java.lang.Long) defaultValue(fields()[1]);
        record.mainAddrId = fieldSetFlags()[2] ? this.mainAddrId : (java.lang.Long) defaultValue(fields()[2]);
        record.mainAddress = fieldSetFlags()[3] ? this.mainAddress : (java.lang.String) defaultValue(fields()[3]);
        record.bpName = fieldSetFlags()[4] ? this.bpName : (java.lang.String) defaultValue(fields()[4]);
        record.bpNr = fieldSetFlags()[5] ? this.bpNr : (java.lang.String) defaultValue(fields()[5]);
        record.bpCloseDate = fieldSetFlags()[6] ? this.bpCloseDate : (java.lang.String) defaultValue(fields()[6]);
        record.personName = fieldSetFlags()[7] ? this.personName : (java.lang.String) defaultValue(fields()[7]);
        record.personNr = fieldSetFlags()[8] ? this.personNr : (java.lang.String) defaultValue(fields()[8]);
        record.personCloseDate = fieldSetFlags()[9] ? this.personCloseDate : (java.lang.String) defaultValue(fields()[9]);
        record.narilo = fieldSetFlags()[10] ? this.narilo : (java.lang.String) defaultValue(fields()[10]);
        record.legalHold = fieldSetFlags()[11] ? this.legalHold : (java.lang.String) defaultValue(fields()[11]);
        record.isMa = fieldSetFlags()[12] ? this.isMa : (java.lang.String) defaultValue(fields()[12]);
        record.domiAddrId = fieldSetFlags()[13] ? this.domiAddrId : (java.lang.Long) defaultValue(fields()[13]);
        record.domiAddress = fieldSetFlags()[14] ? this.domiAddress : (java.lang.String) defaultValue(fields()[14]);
        record.banklagernd = fieldSetFlags()[15] ? this.banklagernd : (java.lang.String) defaultValue(fields()[15]);
        record.isVip = fieldSetFlags()[16] ? this.isVip : (java.lang.String) defaultValue(fields()[16]);
        record.isBoeko = fieldSetFlags()[17] ? this.isBoeko : (java.lang.String) defaultValue(fields()[17]);
        record.hash = fieldSetFlags()[18] ? this.hash : (java.lang.String) defaultValue(fields()[18]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ObjectUpdateEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<ObjectUpdateEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ObjectUpdateEvent>
    READER$ = (org.apache.avro.io.DatumReader<ObjectUpdateEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeEnum(this.eventObjType.ordinal());

    if (this.bpObjId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.bpObjId);
    }

    if (this.mainAddrId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.mainAddrId);
    }

    if (this.mainAddress == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.mainAddress);
    }

    if (this.bpName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.bpName);
    }

    if (this.bpNr == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.bpNr);
    }

    if (this.bpCloseDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.bpCloseDate);
    }

    out.writeString(this.personName);

    out.writeString(this.personNr);

    if (this.personCloseDate == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.personCloseDate);
    }

    if (this.narilo == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.narilo);
    }

    out.writeString(this.legalHold);

    if (this.isMa == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.isMa);
    }

    out.writeLong(this.domiAddrId);

    out.writeString(this.domiAddress);

    if (this.banklagernd == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.banklagernd);
    }

    if (this.isVip == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.isVip);
    }

    if (this.isBoeko == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.isBoeko);
    }

    out.writeString(this.hash);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.eventObjType = avro.com.github.bohunn.EventObjType.values()[in.readEnum()];

      if (in.readIndex() != 1) {
        in.readNull();
        this.bpObjId = null;
      } else {
        this.bpObjId = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.mainAddrId = null;
      } else {
        this.mainAddrId = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.mainAddress = null;
      } else {
        this.mainAddress = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.bpName = null;
      } else {
        this.bpName = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.bpNr = null;
      } else {
        this.bpNr = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.bpCloseDate = null;
      } else {
        this.bpCloseDate = in.readString();
      }

      this.personName = in.readString();

      this.personNr = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.personCloseDate = null;
      } else {
        this.personCloseDate = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.narilo = null;
      } else {
        this.narilo = in.readString();
      }

      this.legalHold = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.isMa = null;
      } else {
        this.isMa = in.readString();
      }

      this.domiAddrId = in.readLong();

      this.domiAddress = in.readString();

      if (in.readIndex() != 1) {
        in.readNull();
        this.banklagernd = null;
      } else {
        this.banklagernd = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.isVip = null;
      } else {
        this.isVip = in.readString();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.isBoeko = null;
      } else {
        this.isBoeko = in.readString();
      }

      this.hash = in.readString();

    } else {
      for (int i = 0; i < 19; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.eventObjType = avro.com.github.bohunn.EventObjType.values()[in.readEnum()];
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.bpObjId = null;
          } else {
            this.bpObjId = in.readLong();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.mainAddrId = null;
          } else {
            this.mainAddrId = in.readLong();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.mainAddress = null;
          } else {
            this.mainAddress = in.readString();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.bpName = null;
          } else {
            this.bpName = in.readString();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.bpNr = null;
          } else {
            this.bpNr = in.readString();
          }
          break;

        case 6:
          if (in.readIndex() != 1) {
            in.readNull();
            this.bpCloseDate = null;
          } else {
            this.bpCloseDate = in.readString();
          }
          break;

        case 7:
          this.personName = in.readString();
          break;

        case 8:
          this.personNr = in.readString();
          break;

        case 9:
          if (in.readIndex() != 1) {
            in.readNull();
            this.personCloseDate = null;
          } else {
            this.personCloseDate = in.readString();
          }
          break;

        case 10:
          if (in.readIndex() != 1) {
            in.readNull();
            this.narilo = null;
          } else {
            this.narilo = in.readString();
          }
          break;

        case 11:
          this.legalHold = in.readString();
          break;

        case 12:
          if (in.readIndex() != 1) {
            in.readNull();
            this.isMa = null;
          } else {
            this.isMa = in.readString();
          }
          break;

        case 13:
          this.domiAddrId = in.readLong();
          break;

        case 14:
          this.domiAddress = in.readString();
          break;

        case 15:
          if (in.readIndex() != 1) {
            in.readNull();
            this.banklagernd = null;
          } else {
            this.banklagernd = in.readString();
          }
          break;

        case 16:
          if (in.readIndex() != 1) {
            in.readNull();
            this.isVip = null;
          } else {
            this.isVip = in.readString();
          }
          break;

        case 17:
          if (in.readIndex() != 1) {
            in.readNull();
            this.isBoeko = null;
          } else {
            this.isBoeko = in.readString();
          }
          break;

        case 18:
          this.hash = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










