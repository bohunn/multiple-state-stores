plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.3'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'com.github.davidmc24.gradle.plugin.avro' version '1.8.0'
}

group = 'com.github.bohunn'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://packages.confluent.io/maven/"
    }
}

import com.github.davidmc24.gradle.plugin.avro.GenerateAvroJavaTask

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-actuator'
    implementation 'org.springframework.boot:spring-boot-actuator-autoconfigure'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation group: 'io.confluent', name: "kafka-streams-avro-serde", version: "7.3.0"
    implementation group: 'io.confluent', name: "kafka-avro-serializer", version: "7.3.0"
    implementation group: 'org.springframework.kafka', name: 'spring-kafka', version: '3.0.11'
    implementation group: 'org.apache.kafka', name: "kafka-streams", version: "3.5.1"
    implementation group: 'org.apache.avro', name: "avro", version: "1.11.1"
    implementation group: 'jakarta.xml.bind', name: 'jakarta.xml.bind-api', version: '4.0.0'
    implementation group: 'io.strimzi', name: 'kafka-kubernetes-config-provider', version: '1.1.1'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register("generateAvroJavaClasses", GenerateAvroJavaTask) {
    source("$projectDir/src/main/resources/avro")
    outputDir = file("src/main/java")
}

task unpack(type: Copy) {
    dependsOn bootJar
    from zipTree(tasks.bootJar.outputs.files.singleFile)
    into "$buildDir/docker"
}